# This file stores some meta configurations for project PyPOTS.

# Created by Wenjie Du <wenjay.du@gmail.com>
# License: BSD-3-Clause

[flake8]
# People may argue that coding style is personal. This may be true if the project is personal and one works like a
# hermit, but to PyPOTS and its community, the answer is NO.
# We use Black and Flake8 to lint code style and keep the style consistent across all commits and pull requests.
# Black only reformats the code, and Flake8 is necessary for checking for some other issues not covered by Black.

# The Black line length is default as 88, while the default of Flake8 is 79. However, considering our monitors are
# much more advanced nowadays, I extend the maximum line length to 120, like other project e.g. transformers. People
# who prefer the default setting can keep using 88 or 79 while coding. Please ensure your code lines not exceeding 120.
max-line-length = 120
extend-ignore =
    # why ignore E203? Refer to https://github.com/PyCQA/pycodestyle/issues/373
    E203,
# ignore some errors that are not important in template files
exclude = pypots/*/template


[options.extras_require]
# add dependencies for different usages below

# basic dependencies
basic =
    numpy
    scikit-learn
    matplotlib
    pandas<2.0.0
    torch>=1.10.0
    tensorboard
    scipy
    h5py
    tsdb>=0.2
    pygrinder>=0.4

# dependencies that are optional, torch-geometric are only needed for model Raindrop
# but its installation takes too much time
optional =
    torch-geometric
    torch-scatter
    torch-sparse
    nni

# dependencies for run all functions and models in PyPOTS =  `basic` dependencies + `optional` dependencies
full =
    %(basic)s
    %(optional)s

# dependencies to run tests
test =
    pytest-xdist
    pytest-cov

# dependencies for documentation generating
doc =
    furo
    sphinx
    sphinxcontrib-bibtex
    sphinxcontrib-gtagjs
    sphinx-autodoc-typehints

# dependencies for development = `full` dependencies + `test` dependencies
dev =
    black
    flake8
    pre-commit
    jupyterlab
    %(full)s
    %(test)s
    %(doc)s
